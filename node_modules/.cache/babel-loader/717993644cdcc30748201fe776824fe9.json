{"ast":null,"code":"var _jsxFileName = \"/Users/imalkaweerasekara/IdeaProjects/monster-rolling/src/App.js\";\nimport { Component } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(user => this.setState(() => {\n      return {\n        monsters: user\n      };\n    }, () => {\n      console.log(\"current State:- \", this.state); //check the current state of state object\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: event => {\n          console.log(\"print-event-input\", event.target.value);\n          this.state.monsters.filter(monster => {\n            monster.name;\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), this.state.monsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: monster.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/imalkaweerasekara/IdeaProjects/monster-rolling/src/App.js"],"names":["Component","App","constructor","state","monsters","componentDidMount","fetch","then","response","json","user","setState","console","log","render","event","target","value","filter","monster","name","map","id"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IACJ,KAAKC,QAAL,CACE,MAAM;AACJ,aAAO;AAAEP,QAAAA,QAAQ,EAAEM;AAAZ,OAAP;AACD,KAHH,EAIE,MAAM;AACJE,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKV,KAArC,EADI,CACyC;AAC9C,KANH,CAHJ;AAYD;;AAEDW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,WAAW,EAAC,iBAHd;AAIE,QAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBH,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,KAAK,CAACC,MAAN,CAAaC,KAA9C;AACA,eAAKd,KAAL,CAAWC,QAAX,CAAoBc,MAApB,CAA4BC,OAAD,IAAW;AAClCA,YAAAA,OAAO,CAACC,IAAR;AACH,WAFD;AAGD;AATH;AAAA;AAAA;AAAA;AAAA,cADF,EAYG,KAAKjB,KAAL,CAAWC,QAAX,CAAoBiB,GAApB,CAAyBF,OAAD,IAAa;AACpC,4BACE;AAAA,iCACE;AAAA,sBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF,WAAUD,OAAO,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,OANA,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AA9CyB;;AAiD5B,eAAerB,GAAf","sourcesContent":["import { Component } from \"react\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((user) =>\n        this.setState(\n          () => {\n            return { monsters: user };\n          },\n          () => {\n            console.log(\"current State:- \", this.state); //check the current state of state object\n          }\n        )\n      );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <input\n          className=\"search\"\n          type=\"search\"\n          placeholder=\"search monsters\"\n          onChange={(event) => {\n            console.log(\"print-event-input\", event.target.value);\n            this.state.monsters.filter((monster)=>{\n                monster.name \n            })\n          }}\n        />\n        {this.state.monsters.map((monster) => {\n          return (\n            <div key={monster.id}>\n              <h1>{monster.name}</h1>\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}